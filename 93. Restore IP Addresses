class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
        vector<string> result;
        
        size_t size = s.size();
        if(size < 4 || size > 12) return result;
        int first ,second,third;
        for(first = 1 ; first < 4 ;first++)
        {
            for(second =first+1;second < first+4 ; second++)
            {
                for(third = second+1 ; third < second+4 ; third++)
                {
                    if(isok(s,first,second,third))
                    {
                        string solution(size+3,'.');
                        for(int i = 0 ; i < first ;i++)
                            solution[i] = s[i];
                        for(int j = first ; j < second ;j++)
                            solution[j+1] = s[j];
                        for(int k = second ;k < third ;k++)
                            solution[k+2] = s[k];
                        for(int l = third ; l < size ; l++)
                            solution[l+3] = s[l];
                        result.push_back(solution);
                    }
                }
            }
        }
        return result;
    }
private:
    bool isok(string s ,int first , int second ,int third)
    {
        size_t size = s.size();
        if(third >= size || size - third > 3) return false;
       
        return (numok(s,0,first) && (numok(s,first,second) && (numok(s,second,third))&&(numok(s,third,size)))) ;
    }
    bool numok(string s , int low ,int high)
    {
        int num =  0;
        if( high-low > 1 && (s[low]-'0') == 0) return false;
        while(high > low)
        {
            num += (s[low] -'0')*pow(10,high-low-1);
            low++;
        }
        if(num>255) return false;
        return true;
    }
};
